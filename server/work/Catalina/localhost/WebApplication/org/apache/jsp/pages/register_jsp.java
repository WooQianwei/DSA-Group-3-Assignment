/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.59
 * Generated at: 2020-11-18 21:45:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import main.WebConfig;
import xenum.ErrorDetails;
import java.util.Map;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("main.WebConfig");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("xenum.ErrorDetails");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response,  main.WebConfig.META_URL + (( main.WebConfig.META_URL).indexOf('?')>0? '&': '?') + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("title", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("Register", request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response,  main.WebConfig.HEADER_URL, out, false);
      out.write("\n");
      out.write("\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <h1 class=\"text-center\">Create a new Account</h1>\n");
      out.write("            <br>\n");
      out.write("            <div class=\"register\"> \n");
      out.write("                <form id=\"mainForm\" method=\"post\" action=\"");
      out.print( WebConfig.WEB_URL);
      out.write("RegisterAction\">\n");
      out.write("                    <img src=\"");
      out.print( main.Datas.settings.getValue("image/logo"));
      out.write("\" alt=\"Users\" \n");
      out.write("                         class=\"img-circle img-login center-block\" width=\"80\" height=\"80\"> \n");
      out.write("                    <div class=\"form-group row\">\n");
      out.write("                        <div class=\"col-sm-6\">\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"fname\" name=\"fname\" placeholder=\"First name\" autofocus>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-sm-6\">\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"lname\" name=\"lname\" placeholder=\"Last name\">\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <hr>\n");
      out.write("                    <sup>You can use letter, number and underscore</sup>\n");
      out.write("                    <div class=\"form-group row\">\n");
      out.write("                        <div class=\"col-sm-12\">\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"username\" name=\"username\" placeholder=\"Username\">\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <hr>\n");
      out.write("                    <div class=\"form-group row\">\n");
      out.write("                        <div class=\"col-sm-12\">\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Email Address\">\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <hr>\n");
      out.write("                    <div>\n");
      out.write("                        <sup>Use 8 or more characters with a mix of letters, numbers & symbols</sup>\n");
      out.write("                        <span toggle=\"#password\" toggle2=\"#password2\" class=\"fa fa-fw fa-eye field-icon toggle-password pull-right\"></span>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"form-group row\">\n");
      out.write("                        <div class=\"col-sm-6\">\n");
      out.write("                            <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\"  placeholder=\"Password\">\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-sm-6\">\n");
      out.write("                            <input type=\"password\" class=\"form-control\" id=\"password2\" name=\"password2\"  placeholder=\"Confrim password\">\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"form-group row\">\n");
      out.write("                        <div class=\"col-sm-6\">\n");
      out.write("                            <div class=\"checkbox\">\n");
      out.write("                                <label>\n");
      out.write("                                    <input type=\"checkbox\" id=\"agree\" name=\"agree\" value=\"agree\" />Please agree to our policy\n");
      out.write("                                </label>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-sm-6\">\n");
      out.write("                            <div class=\"custom-control custom-switch pull-right\">\n");
      out.write("                                <label class=\"toggle-switch\">\n");
      out.write("                                    <input type=\"checkbox\" id=\"registerAsDriver\" name=\"registerAsDriver\" class=\"toggle-switch-input\" value=\"driver\"/>\n");
      out.write("                                    <label for=\"registerAsDriver\" class=\"toggle-switch-label\"></label>\n");
      out.write("                                    <div style=\"color:#888\">Register as driver</div>\n");
      out.write("                                </label>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <br><br>\n");
      out.write("                    <div class=\"form-group row\">\n");
      out.write("                        <div class=\"col-sm-6\">\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"col-sm-6\">\n");
      out.write("                            <input type=\"submit\" class=\"btn btn-lg btn-info pull-right\" value=\"Register\">\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("                <p>Already have an account ? <a href=\"");
      out.print( main.Datas.settings.getValue("pages/login"));
      out.write("\">Sign in</a>.</p>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <script>\n");
      out.write("            $(\".toggle-password\").click(function () {\n");
      out.write("                $(this).toggleClass(\"fa-eye fa-eye-slash\");\n");
      out.write("                var input = $($(this).attr(\"toggle\"));\n");
      out.write("                var input2 = $($(this).attr(\"toggle2\"));\n");
      out.write("                if (input.attr(\"type\") == \"password\") {\n");
      out.write("                    input.attr(\"type\", \"text\");\n");
      out.write("                    input2.attr(\"type\", \"text\");\n");
      out.write("                } else {\n");
      out.write("                    input.attr(\"type\", \"password\");\n");
      out.write("                    input2.attr(\"type\", \"password\");\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("\n");
      out.write("            $(document).ready(function () {\n");
      out.write("                $(\"#mainForm\").validate({\n");
      out.write("                    rules: {\n");
      out.write("                        fname: {\n");
      out.write("                            required: true,\n");
      out.write("                            minlength: 2\n");
      out.write("                        },\n");
      out.write("                        lname: {\n");
      out.write("                            required: true,\n");
      out.write("                            minlength: 3\n");
      out.write("                        },\n");
      out.write("                        username: {\n");
      out.write("                            required: true,\n");
      out.write("                            minlength: 3\n");
      out.write("                        },\n");
      out.write("                        password: {\n");
      out.write("                            required: true,\n");
      out.write("                            minlength: 8,\n");
      out.write("                            pwcheck: true\n");
      out.write("                        },\n");
      out.write("                        password2: {\n");
      out.write("                            required: true,\n");
      out.write("                            minlength: 8,\n");
      out.write("                            equalTo: \"#password\"\n");
      out.write("                        },\n");
      out.write("                        email: {\n");
      out.write("                            required: true,\n");
      out.write("                            email: true\n");
      out.write("                        },\n");
      out.write("                        agree: \"required\"\n");
      out.write("                    },\n");
      out.write("                    messages: {\n");
      out.write("                        fname: \"Please enter your firstname\",\n");
      out.write("                        lname: \"Please enter your lastname\",\n");
      out.write("                        username: {\n");
      out.write("                            required: \"Please enter a username\",\n");
      out.write("                            minlength: \"Your username must consist of at least 2 characters\"\n");
      out.write("                        },\n");
      out.write("                        password: {\n");
      out.write("                            required: \"Please provide a password\",\n");
      out.write("                            pwcheck: \"The password need at least 1 Uppercase, 1 Lowercase and 1 digit\",\n");
      out.write("                            minlength: \"Your password must be at least 8 characters long\"\n");
      out.write("                        },\n");
      out.write("                        password2: {\n");
      out.write("                            required: \"Please provide a password\",\n");
      out.write("                            minlength: \"Your password must be at least 5 characters long\",\n");
      out.write("                            equalTo: \"Please enter the same password as above\"\n");
      out.write("                        },\n");
      out.write("                        email: \"Please enter a valid email address\",\n");
      out.write("                        agree: \"Please accept our policy\"\n");
      out.write("                    },\n");
      out.write("                    errorElement: \"em\",\n");
      out.write("                    errorPlacement: function (error, element) {\n");
      out.write("                        // Add the `help-block` class to the error element\n");
      out.write("                        error.addClass(\"help-block\");\n");
      out.write("                        if (element.prop(\"type\") === \"checkbox\") {\n");
      out.write("                            error.insertAfter(element.parent(\"label\"));\n");
      out.write("                        } else {\n");
      out.write("                            error.insertAfter(element);\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                    ,\n");
      out.write("                    highlight: function (element, errorClass, validClass) {\n");
      out.write("                        $(element).parents(\".col-sm-5\").addClass(\"has-error\").removeClass(\"has-success\");\n");
      out.write("                    }\n");
      out.write("                    ,\n");
      out.write("                    unhighlight: function (element, errorClass, validClass) {\n");
      out.write("                        $(element).parents(\".col-sm-5\").addClass(\"has-success\").removeClass(\"has-error\");\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("                );\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response,  main.WebConfig.FOOTER_URL, out, false);
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
