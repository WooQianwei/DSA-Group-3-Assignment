run:
# JMH version: 1.26
# VM version: JDK 1.8.0_111, Java HotSpot(TM) 64-Bit Server VM, 25.111-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_111\jre\bin\java.exe
# VM options: -Xms2G -Xmx2G
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.test.adt.speed.TestLoopSpeeds.loopArrList
# Parameters: (N = 1000000)

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 1
# Warmup Iteration   1: 6.080 ms/op
# Warmup Iteration   2: 6.071 ms/op
# Warmup Iteration   3: 6.038 ms/op
# Warmup Iteration   4: 5.993 ms/op
# Warmup Iteration   5: 6.025 ms/op
Iteration   1: 6.015 ms/op
Iteration   2: 6.090 ms/op
Iteration   3: 5.998 ms/op
Iteration   4: 6.106 ms/op
Iteration   5: 6.028 ms/op


Result "com.test.adt.speed.TestLoopSpeeds.loopArrList":
  6.048 ±(99.9%) 0.185 ms/op [Average]
  (min, avg, max) = (5.998, 6.048, 6.106), stdev = 0.048
  CI (99.9%): [5.863, 6.232] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 1.8.0_111, Java HotSpot(TM) 64-Bit Server VM, 25.111-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_111\jre\bin\java.exe
# VM options: -Xms2G -Xmx2G
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.test.adt.speed.TestLoopSpeeds.loopArray
# Parameters: (N = 1000000)

# Run progress: 20.00% complete, ETA 00:06:42
# Fork: 1 of 1
# Warmup Iteration   1: 5.960 ms/op
# Warmup Iteration   2: 5.906 ms/op
# Warmup Iteration   3: 5.821 ms/op
# Warmup Iteration   4: 5.973 ms/op
# Warmup Iteration   5: 5.794 ms/op
Iteration   1: 5.805 ms/op
Iteration   2: 5.782 ms/op
Iteration   3: 5.817 ms/op
Iteration   4: 5.791 ms/op
Iteration   5: 5.845 ms/op


Result "com.test.adt.speed.TestLoopSpeeds.loopArray":
  5.808 ±(99.9%) 0.095 ms/op [Average]
  (min, avg, max) = (5.782, 5.808, 5.845), stdev = 0.025
  CI (99.9%): [5.713, 5.903] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 1.8.0_111, Java HotSpot(TM) 64-Bit Server VM, 25.111-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_111\jre\bin\java.exe
# VM options: -Xms2G -Xmx2G
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.test.adt.speed.TestLoopSpeeds.loopLibArrayList
# Parameters: (N = 1000000)

# Run progress: 40.00% complete, ETA 00:05:01
# Fork: 1 of 1
# Warmup Iteration   1: 6.589 ms/op
# Warmup Iteration   2: 6.574 ms/op
# Warmup Iteration   3: 6.610 ms/op
# Warmup Iteration   4: 6.593 ms/op
# Warmup Iteration   5: 6.610 ms/op
Iteration   1: 6.629 ms/op
Iteration   2: 6.643 ms/op
Iteration   3: 6.624 ms/op
Iteration   4: 6.607 ms/op
Iteration   5: 6.561 ms/op


Result "com.test.adt.speed.TestLoopSpeeds.loopLibArrayList":
  6.613 ±(99.9%) 0.122 ms/op [Average]
  (min, avg, max) = (6.561, 6.613, 6.643), stdev = 0.032
  CI (99.9%): [6.490, 6.735] (assumes normal distribution)


# JMH version: 1.26
# VM version: JDK 1.8.0_111, Java HotSpot(TM) 64-Bit Server VM, 25.111-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_111\jre\bin\java.exe
# VM options: -Xms2G -Xmx2G
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.test.adt.speed.TestLoopSpeeds.loopQueue
# Parameters: (N = 1000000)

# Run progress: 60.00% complete, ETA 00:03:21
# Fork: 1 of 1
# Warmup Iteration   1: ˜ 10?6 ms/op
# Warmup Iteration   2: ˜ 10?6 ms/op
# Warmup Iteration   3: ˜ 10?6 ms/op
# Warmup Iteration   4: ˜ 10?6 ms/op
# Warmup Iteration   5: ˜ 10?6 ms/op
Iteration   1: ˜ 10?6 ms/op
Iteration   2: ˜ 10?6 ms/op
Iteration   3: ˜ 10?6 ms/op
Iteration   4: ˜ 10?6 ms/op
Iteration   5: ˜ 10?6 ms/op


Result "com.test.adt.speed.TestLoopSpeeds.loopQueue":
  ˜ 10?6 ms/op


# JMH version: 1.26
# VM version: JDK 1.8.0_111, Java HotSpot(TM) 64-Bit Server VM, 25.111-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_111\jre\bin\java.exe
# VM options: -Xms2G -Xmx2G
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.test.adt.speed.TestLoopSpeeds.loopStack
# Parameters: (N = 1000000)

# Run progress: 80.00% complete, ETA 00:01:40
# Fork: 1 of 1
# Warmup Iteration   1: ˜ 10?6 ms/op
# Warmup Iteration   2: ˜ 10?6 ms/op
# Warmup Iteration   3: ˜ 10?6 ms/op
# Warmup Iteration   4: ˜ 10?6 ms/op
# Warmup Iteration   5: ˜ 10?6 ms/op
Iteration   1: ˜ 10?6 ms/op
Iteration   2: ˜ 10?6 ms/op
Iteration   3: ˜ 10?6 ms/op
Iteration   4: ˜ 10?6 ms/op
Iteration   5: ˜ 10?6 ms/op


Result "com.test.adt.speed.TestLoopSpeeds.loopStack":
  ˜ 10?6 ms/op


# Run complete. Total time: 00:08:22

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            (N)  Mode  Cnt   Score    Error  Units
TestLoopSpeeds.loopArrList       1000000  avgt    5   6.048 ±  0.185  ms/op
TestLoopSpeeds.loopArray         1000000  avgt    5   5.808 ±  0.095  ms/op
TestLoopSpeeds.loopLibArrayList  1000000  avgt    5   6.613 ±  0.122  ms/op
TestLoopSpeeds.loopQueue         1000000  avgt    5  ˜ 10?6           ms/op
TestLoopSpeeds.loopStack         1000000  avgt    5  ˜ 10?6           ms/op
BUILD SUCCESSFUL (total time: 8 minutes 23 seconds)